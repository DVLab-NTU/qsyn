qsyn> zx new

qsyn> zx vertex add input 0

qsyn> zx vertex add output 0

qsyn> zx vertex add z 0 0

qsyn> zx vertex add z 0 0

qsyn> zx edge add 2 3 SIMPLE

qsyn> zx edge add 1 2 SIMPLE

qsyn> zx edge add 2 3 SIMPLE

qsyn> zx edge add 2 3 SIMPLE

qsyn> zx edge add 3 2 HADAMARD

qsyn> zx edge add 3 2 SIMPLE

qsyn> zx edge add 2 0 SIMPLE

qsyn> zx edge add 3 1 SIMPLE

qsyn> zx print -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (2, -)
ID:   1 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   2     (2, -) (3, -)
ID:   2 (Z, 0)           (Qubit, Col): (0, 0)         #Neighbors:   4     (0, -) (1, -) (3, -) (3, H)
ID:   3 (Z, 0)           (Qubit, Col): (0, 0)         #Neighbors:   3     (1, -) (2, -) (2, H)
Total #Vertices: 4


qsyn> zx print -e
(0, 2)       Type: -
(1, 2)       Type: -
(1, 3)       Type: -
(2, 3)       Type: -
(2, 3)       Type: H
Total #Edges: 5

qsyn> zx rule --spider-fusion

qsyn> zx print -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (2, -)
ID:   1 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (2, -)
ID:   2 (Z, π)           (Qubit, Col): (0, 0)         #Neighbors:   2     (0, -) (1, -)
Total #Vertices: 3


qsyn> zx print -e
(0, 2)       Type: -
(1, 2)       Type: -
Total #Edges: 2

qsyn> zx clear

qsyn> zx new

qsyn> zx vertex add input 0

qsyn> zx vertex add input 1

qsyn> zx vertex add output 0

qsyn> zx vertex add z 0 0

qsyn> zx vertex add z 0 0

qsyn> zx vertex add z 0 0

qsyn> zx vertex add x 0 0

qsyn> zx vertex add x 0 0

qsyn> zx edge add 0 3 SIMPLE

qsyn> zx edge add 1 3 SIMPLE

qsyn> zx edge add 3 4 SIMPLE

qsyn> zx edge add 3 4 HADAMARD

qsyn> zx edge add 3 6 HADAMARD

qsyn> zx edge add 4 5 SIMPLE

qsyn> zx edge add 4 5 SIMPLE

qsyn> zx edge add 4 6 SIMPLE

qsyn> zx edge add 5 7 HADAMARD

qsyn> zx edge add 6 7 SIMPLE

qsyn> zx edge add 5 2 SIMPLE

qsyn> zx edge add 7 2 SIMPLE

qsyn> zx print -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (3, -)
ID:   1 (●, 0)           (Qubit, Col): (1, 0)         #Neighbors:   1     (3, -)
ID:   2 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   2     (5, -) (7, -)
ID:   3 (Z, 0)           (Qubit, Col): (0, 0)         #Neighbors:   5     (0, -) (1, -) (4, -) (4, H) (6, H)
ID:   4 (Z, 0)           (Qubit, Col): (0, 0)         #Neighbors:   4     (3, -) (3, H) (5, -) (6, -)
ID:   5 (Z, 0)           (Qubit, Col): (0, 0)         #Neighbors:   3     (2, -) (4, -) (7, H)
ID:   6 (X, 0)           (Qubit, Col): (0, 0)         #Neighbors:   3     (3, H) (4, -) (7, -)
ID:   7 (X, 0)           (Qubit, Col): (0, 0)         #Neighbors:   3     (2, -) (5, H) (6, -)
Total #Vertices: 8


qsyn> zx print -e
(0, 3)       Type: -
(1, 3)       Type: -
(2, 5)       Type: -
(2, 7)       Type: -
(3, 4)       Type: -
(3, 4)       Type: H
(3, 6)       Type: H
(4, 5)       Type: -
(4, 6)       Type: -
(5, 7)       Type: H
(6, 7)       Type: -
Total #Edges: 11

qsyn> zx rule --spider-fusion

qsyn> zx print -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (3, -)
ID:   1 (●, 0)           (Qubit, Col): (1, 0)         #Neighbors:   1     (3, -)
ID:   2 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   2     (3, -) (6, -)
ID:   3 (Z, π)           (Qubit, Col): (0, 0)         #Neighbors:   5     (0, -) (1, -) (2, -) (6, -) (6, H)
ID:   6 (X, 0)           (Qubit, Col): (0, 0)         #Neighbors:   3     (2, -) (3, -) (3, H)
Total #Vertices: 5


qsyn> zx print -e
(0, 3)       Type: -
(1, 3)       Type: -
(2, 3)       Type: -
(2, 6)       Type: -
(3, 6)       Type: H
(3, 6)       Type: -
Total #Edges: 6

qsyn> zx clear

qsyn> zx new

qsyn> zx vertex add input 0

qsyn> zx vertex add input 1

qsyn> zx vertex add output 0

qsyn> zx vertex add z 0 0

qsyn> zx edge add 0 3 SIMPLE

qsyn> zx edge add 1 3 SIMPLE

qsyn> zx edge add 2 3 SIMPLE

qsyn> zx edge add 3 3 SIMPLE

qsyn> zx edge add 3 3 SIMPLE

qsyn> zx edge add 3 3 HADAMARD

qsyn> zx print -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (3, -)
ID:   1 (●, 0)           (Qubit, Col): (1, 0)         #Neighbors:   1     (3, -)
ID:   2 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (3, -)
ID:   3 (Z, π)           (Qubit, Col): (0, 0)         #Neighbors:   3     (0, -) (1, -) (2, -)
Total #Vertices: 4


qsyn> zx print -e
(0, 3)       Type: -
(1, 3)       Type: -
(2, 3)       Type: -
Total #Edges: 3

qsyn> zx rule --spider-fusion

qsyn> zx print -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (3, -)
ID:   1 (●, 0)           (Qubit, Col): (1, 0)         #Neighbors:   1     (3, -)
ID:   2 (●, 0)           (Qubit, Col): (0, 0)         #Neighbors:   1     (3, -)
ID:   3 (Z, π)           (Qubit, Col): (0, 0)         #Neighbors:   3     (0, -) (1, -) (2, -)
Total #Vertices: 4


qsyn> zx print -e
(0, 3)       Type: -
(1, 3)       Type: -
(2, 3)       Type: -
Total #Edges: 3

qsyn> quit -f

