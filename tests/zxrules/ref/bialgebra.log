qsyn> zx new 10

qsyn> zx vertex add i 0

qsyn> zx vertex add o 0

qsyn> zx vertex add i 1

qsyn> zx vertex add o 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add x 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add z 1

qsyn> zx edge add 5 7 SIMPLE

qsyn> zx edge add 0 4 SIMPLE

qsyn> zx edge add 1 8 SIMPLE

qsyn> zx edge add 2 6 SIMPLE

qsyn> zx edge add 3 9 SIMPLE

qsyn> zx edge add 4 5 SIMPLE

qsyn> zx edge add 5 6 SIMPLE

qsyn> zx edge add 7 8 SIMPLE

qsyn> zx edge add 7 9 SIMPLE

qsyn> logger debug
[info]     Setting logger level to "debug"

qsyn> zx rule --bialgebra
[info]     Bialgebra Rule                1 iterations, total    1 matches
[debug]       1) 1 matches

qsyn> logger warn

qsyn> zx print -v

ID:    0 (●, 0)       (Qubit, Col): (0, 0)         #Neighbors:   1    (4, -)
ID:    1 (●, 0)       (Qubit, Col): (0, 0)         #Neighbors:   1    (8, -)
ID:    2 (●, 0)       (Qubit, Col): (1, 0)         #Neighbors:   1    (6, -)
ID:    3 (●, 0)       (Qubit, Col): (1, 0)         #Neighbors:   1    (9, -)
ID:    4 (X, 0)       (Qubit, Col): (0, 0)         #Neighbors:   3    (0, -) (8, -) (9, -)
ID:    6 (X, 0)       (Qubit, Col): (1, 0)         #Neighbors:   3    (2, -) (8, -) (9, -)
ID:    8 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   3    (1, -) (4, -) (6, -)
ID:    9 (Z, 0)       (Qubit, Col): (1, 0)         #Neighbors:   3    (3, -) (4, -) (6, -)
Total #Vertices: 8


qsyn> zx print -e
(0, 4)       Type: -
(1, 8)       Type: -
(2, 6)       Type: -
(3, 9)       Type: -
(4, 8)       Type: -
(4, 9)       Type: -
(6, 8)       Type: -
(6, 9)       Type: -
Total #Edges: 8

qsyn> zx delete --all

qsyn> zx new 

qsyn> zx vertex add i 0

qsyn> zx vertex add o 0

qsyn> zx vertex add i 1

qsyn> zx vertex add o 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add x 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add z 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add x 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add z 0

qsyn> zx edge add 0 4 SIMPLE

qsyn> zx edge add 1 14 SIMPLE

qsyn> zx edge add 2 6 SIMPLE

qsyn> zx edge add 3 15 SIMPLE

qsyn> zx edge add 4 5 SIMPLE

qsyn> zx edge add 5 7 SIMPLE

qsyn> zx edge add 5 6 SIMPLE

qsyn> zx edge add 7 8 SIMPLE

qsyn> zx edge add 7 9 SIMPLE

qsyn> zx edge add 8 10 SIMPLE

qsyn> zx edge add 10 9 SIMPLE

qsyn> zx edge add 10 11 SIMPLE

qsyn> zx edge add 11 12 SIMPLE

qsyn> zx edge add 11 13 SIMPLE

qsyn> zx edge add 14 13 SIMPLE

qsyn> zx edge add 12 15 SIMPLE

qsyn> logger debug
[info]     Setting logger level to "debug"

qsyn> zx rule --bialgebra
[info]     Bialgebra Rule                2 iterations, total    3 matches
[debug]       1) 2 matches
[debug]       2) 1 matches

qsyn> logger warn

qsyn> zx print -v

ID:    0 (●, 0)       (Qubit, Col): (0, 0)         #Neighbors:   1    (4, -)
ID:    1 (●, 0)       (Qubit, Col): (0, 0)         #Neighbors:   1    (14, -)
ID:    2 (●, 0)       (Qubit, Col): (1, 0)         #Neighbors:   1    (6, -)
ID:    3 (●, 0)       (Qubit, Col): (1, 0)         #Neighbors:   1    (15, -)
ID:    4 (X, 0)       (Qubit, Col): (0, 0)         #Neighbors:   2    (0, -) (15, -)
ID:    6 (X, 0)       (Qubit, Col): (1, 0)         #Neighbors:   2    (2, -) (15, -)
ID:   13 (X, 0)       (Qubit, Col): (0, 0)         #Neighbors:   2    (14, -) (15, -)
ID:   14 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   2    (1, -) (13, -)
ID:   15 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   4    (3, -) (4, -) (6, -) (13, -)
Total #Vertices: 9


qsyn> zx print -e
(0, 4)       Type: -
(1, 14)      Type: -
(2, 6)       Type: -
(3, 15)      Type: -
(4, 15)      Type: -
(6, 15)      Type: -
(13, 14)     Type: -
(13, 15)     Type: -
Total #Edges: 8

qsyn> zx2ts

qsyn> zx new

qsyn> zx vertex add i 0

qsyn> zx vertex add o 0

qsyn> zx vertex add i 1

qsyn> zx vertex add o 1

qsyn> zx vertex add z 0 0

qsyn> zx vertex add z 0 0

qsyn> zx edge add 0 4 SIMPLE

qsyn> zx edge add 2 4 SIMPLE

qsyn> zx edge add 1 5 SIMPLE

qsyn> zx edge add 3 5 SIMPLE

qsyn> zx edge add 4 5 SIMPLE

qsyn> zx print -v

ID:    0 (●, 0)       (Qubit, Col): (0, 0)         #Neighbors:   1    (4, -)
ID:    1 (●, 0)       (Qubit, Col): (0, 0)         #Neighbors:   1    (5, -)
ID:    2 (●, 0)       (Qubit, Col): (1, 0)         #Neighbors:   1    (4, -)
ID:    3 (●, 0)       (Qubit, Col): (1, 0)         #Neighbors:   1    (5, -)
ID:    4 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   3    (0, -) (2, -) (5, -)
ID:    5 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   3    (1, -) (3, -) (4, -)
Total #Vertices: 6


qsyn> zx2ts

qsyn> tensor equiv 0 1
Equivalent
- Global Norm : 1
- Global Phase: 0

qsyn> zx delete --all

qsyn> zx new 

qsyn> zx vertex add i 0

qsyn> zx vertex add o 0

qsyn> zx vertex add i 1

qsyn> zx vertex add o 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add x 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add z 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add x 1

qsyn> zx vertex add x 0

qsyn> zx vertex add z 0

qsyn> zx vertex add z 0

qsyn> zx edge add 0 4 SIMPLE

qsyn> zx edge add 1 14 HADAMARD

qsyn> zx edge add 2 6 SIMPLE

qsyn> zx edge add 3 15 SIMPLE

qsyn> zx edge add 4 5 SIMPLE

qsyn> zx edge add 5 7 SIMPLE

qsyn> zx edge add 5 6 HADAMARD

qsyn> zx edge add 7 8 SIMPLE

qsyn> zx edge add 7 9 SIMPLE

qsyn> zx edge add 8 10 HADAMARD

qsyn> zx edge add 10 9 SIMPLE

qsyn> zx edge add 10 11 SIMPLE

qsyn> zx edge add 11 12 HADAMARD

qsyn> zx edge add 11 13 HADAMARD

qsyn> zx edge add 14 13 SIMPLE

qsyn> zx edge add 12 15 SIMPLE

qsyn> logger debug
[info]     Setting logger level to "debug"

qsyn> zx rule --bialgebra
[info]     Bialgebra Rule                1 iterations, total    1 matches
[debug]       1) 1 matches

qsyn> logger warn

qsyn> zx print -v

ID:    0 (●, 0)       (Qubit, Col): (0, 0)         #Neighbors:   1    (4, -)
ID:    1 (●, 0)       (Qubit, Col): (0, 0)         #Neighbors:   1    (14, H)
ID:    2 (●, 0)       (Qubit, Col): (1, 0)         #Neighbors:   1    (6, -)
ID:    3 (●, 0)       (Qubit, Col): (1, 0)         #Neighbors:   1    (15, -)
ID:    4 (X, 0)       (Qubit, Col): (0, 0)         #Neighbors:   2    (0, -) (5, -)
ID:    5 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   3    (4, -) (6, H) (10, -)
ID:    6 (X, 0)       (Qubit, Col): (1, 0)         #Neighbors:   2    (2, -) (5, H)
ID:    8 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   2    (10, -) (10, H)
ID:   10 (X, 0)       (Qubit, Col): (0, 0)         #Neighbors:   4    (5, -) (8, -) (8, H) (11, -)
ID:   11 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   3    (10, -) (12, H) (13, H)
ID:   12 (X, 0)       (Qubit, Col): (1, 0)         #Neighbors:   2    (11, H) (15, -)
ID:   13 (X, 0)       (Qubit, Col): (0, 0)         #Neighbors:   2    (11, H) (14, -)
ID:   14 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   2    (1, H) (13, -)
ID:   15 (Z, 0)       (Qubit, Col): (0, 0)         #Neighbors:   2    (3, -) (12, -)
Total #Vertices: 14


qsyn> zx print -e
(0, 4)       Type: -
(1, 14)      Type: H
(2, 6)       Type: -
(3, 15)      Type: -
(4, 5)       Type: -
(5, 6)       Type: H
(5, 10)      Type: -
(8, 10)      Type: H
(8, 10)      Type: -
(10, 11)     Type: -
(11, 12)     Type: H
(11, 13)     Type: H
(12, 15)     Type: -
(13, 14)     Type: -
Total #Edges: 14

qsyn> quit -f

