DV Lab, NTUEE, Qsyn 0.5.1
qsyn> ver 9
Note: verbose level is set to 9

qsyn> qcba
Note: QCir list is empty now. Create a new one.

qsyn> qcga h 0

qsyn> qcga h 0

qsyn> qccp -l
Listed by gate ID
ID:   0 (  h)      Time:    1     Qubit:   0 
ID:   1 (  h)      Time:    2     Qubit:   0 

qsyn> qc2zx

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 4)	  #Neighbors:   1     (3, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (3, -) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (1, -) (2, -) 
Total #Vertices: 4


qsyn> zxgsimp -hr
Hadamard Rule                 

Iteration 1:
>>>
<<<

Iteration 2:
>>>
<<<
=> 2 iterations.
  1) 1 matches
  2) 1 matches

Hadamard Rule                 
=> 0 iterations.


qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (1, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 4)	  #Neighbors:   1     (0, -) 
Total #Vertices: 2


qsyn> zxge -addv 0 HBOX 0

qsyn> zxge -adde 0 4 HADAMARD

qsyn> zxge -adde 1 4 SIMPLE

qsyn> zxge -rme 0 1 ALL

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (4, H) 
ID:   1 (●, 0)           (Qubit, Col): (0, 4)	  #Neighbors:   1     (4, -) 
ID:   4 (H, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   2     (0, H) (1, -) 
Total #Vertices: 3


qsyn> zxgsimp -hf
Hadamard Rule                 

Iteration 1:
>>>
<<<
=> 1 iterations.
  1) 1 matches

Hadmard Fusion Rule           
=> 0 iterations.


qsyn> zxr

qsyn> qcr

qsyn> ver 9
Note: verbose level is set to 9

qsyn> qcba
Note: QCir list is empty now. Create a new one.

qsyn> qcga h 0

qsyn> qcga h 0

qsyn> qcga h 0

qsyn> qccp -l
Listed by gate ID
ID:   0 (  h)      Time:    1     Qubit:   0 
ID:   1 (  h)      Time:    2     Qubit:   0 
ID:   2 (  h)      Time:    3     Qubit:   0 

qsyn> qc2zx

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 5)	  #Neighbors:   1     (4, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (3, -) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (2, -) (4, -) 
ID:   4 (H, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (1, -) (3, -) 
Total #Vertices: 5


qsyn> zxge -rme 2 3 ALL

qsyn> zxge -rme 3 4 ALL

qsyn> zxge -adde 2 3 HADAMARD

qsyn> zxge -adde 3 4 HADAMARD

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 5)	  #Neighbors:   1     (4, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (3, H) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (2, H) (4, H) 
ID:   4 (H, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (1, -) (3, H) 
Total #Vertices: 5


qsyn> zxgsimp -hf
Hadamard Rule                 

Iteration 1:
>>>
<<<

Iteration 2:
>>>
<<<

Iteration 3:
>>>
<<<
=> 3 iterations.
  1) 1 matches
  2) 1 matches
  3) 1 matches

Hadmard Fusion Rule           
=> 0 iterations.


qsyn> zxr

qsyn> qcr

qsyn> ver 9
Note: verbose level is set to 9

qsyn> qcba
Note: QCir list is empty now. Create a new one.

qsyn> qcga h 0

qsyn> qcga h 0

qsyn> qccp -l
Listed by gate ID
ID:   0 (  h)      Time:    1     Qubit:   0 
ID:   1 (  h)      Time:    2     Qubit:   0 

qsyn> qc2zx

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 4)	  #Neighbors:   1     (3, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (3, -) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (1, -) (2, -) 
Total #Vertices: 4


qsyn> zxge -rme 0 2 ALL

qsyn> zxge -rme 2 3 ALL

qsyn> zxge -rme 3 1 ALL

qsyn> zxge -adde 0 2 HADAMARD

qsyn> zxge -adde 2 3 HADAMARD

qsyn> zxge -adde 3 1 HADAMARD

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, H) 
ID:   1 (●, 0)           (Qubit, Col): (0, 4)	  #Neighbors:   1     (3, H) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, H) (3, H) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (1, H) (2, H) 
Total #Vertices: 4


qsyn> zxgsimp -hf
Hadamard Rule                 

Iteration 1:
>>>
<<<

Iteration 2:
>>>
<<<
=> 2 iterations.
  1) 1 matches
  2) 1 matches

Hadmard Fusion Rule           
=> 0 iterations.


qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (1, H) 
ID:   1 (●, 0)           (Qubit, Col): (0, 4)	  #Neighbors:   1     (0, H) 
Total #Vertices: 2


qsyn> zxr

qsyn> qcr

qsyn> ver 9
Note: verbose level is set to 9

qsyn> qcba
Note: QCir list is empty now. Create a new one.

qsyn> qcga h 0

qsyn> qcga h 0

qsyn> qcga h 0

qsyn> qccp -l
Listed by gate ID
ID:   0 (  h)      Time:    1     Qubit:   0 
ID:   1 (  h)      Time:    2     Qubit:   0 
ID:   2 (  h)      Time:    3     Qubit:   0 

qsyn> qc2zx

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 5)	  #Neighbors:   1     (4, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (3, -) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (2, -) (4, -) 
ID:   4 (H, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (1, -) (3, -) 
Total #Vertices: 5


qsyn> zxge -rme 0 2 SIMPLE

qsyn> zxge -rme 2 3 SIMPLE

qsyn> zxge -rme 3 4 SIMPLE

qsyn> zxge -rme 4 1 SIMPLE

qsyn> zxge -adde 0 2 HADAMARD

qsyn> zxge -adde 2 3 HADAMARD

qsyn> zxge -adde 3 4 HADAMARD

qsyn> zxge -adde 4 1 HADAMARD

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, H) 
ID:   1 (●, 0)           (Qubit, Col): (0, 5)	  #Neighbors:   1     (4, H) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, H) (3, H) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (2, H) (4, H) 
ID:   4 (H, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (1, H) (3, H) 
Total #Vertices: 5


qsyn> zxgsimp -hf
Hadamard Rule                 

Iteration 1:
>>>
<<<

Iteration 2:
>>>
<<<

Iteration 3:
>>>
<<<
=> 3 iterations.
  1) 1 matches
  2) 1 matches
  3) 1 matches

Hadmard Fusion Rule           
=> 0 iterations.


qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (1, H) 
ID:   1 (●, 0)           (Qubit, Col): (0, 5)	  #Neighbors:   1     (0, H) 
Total #Vertices: 2


qsyn> zxr

qsyn> qcr

qsyn> ver 9
Note: verbose level is set to 9

qsyn> qcba
Note: QCir list is empty now. Create a new one.

qsyn> qcga h 0

qsyn> qcga z 0

qsyn> qcga h 0

qsyn> qccp -l
Listed by gate ID
ID:   0 (  h)      Time:    1     Qubit:   0 
ID:   1 (  z)      Time:    2     Qubit:   0 
ID:   2 (  h)      Time:    3     Qubit:   0 

qsyn> qc2zx

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 5)	  #Neighbors:   1     (4, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (3, -) 
ID:   3 (Z, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (2, -) (4, -) 
ID:   4 (H, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (1, -) (3, -) 
Total #Vertices: 5


qsyn> zxge -rme 0 2 SIMPLE

qsyn> zxge -rme 3 4 SIMPLE

qsyn> zxge -adde 0 2 HADAMARD

qsyn> zxge -adde 3 4 HADAMARD

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, H) 
ID:   1 (●, 0)           (Qubit, Col): (0, 5)	  #Neighbors:   1     (4, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, H) (3, -) 
ID:   3 (Z, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (2, -) (4, H) 
ID:   4 (H, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (1, -) (3, H) 
Total #Vertices: 5


qsyn> zxgsimp -hf
Hadamard Rule                 

Iteration 1:
>>>
<<<

Iteration 2:
>>>
<<<
=> 2 iterations.
  1) 1 matches
  2) 1 matches

Hadmard Fusion Rule           
=> 0 iterations.


qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (3, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 5)	  #Neighbors:   1     (3, -) 
ID:   3 (Z, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (0, -) (1, -) 
Total #Vertices: 3


qsyn> zxr

qsyn> qcr

qsyn> ver 9
Note: verbose level is set to 9

qsyn> qcba
Note: QCir list is empty now. Create a new one.

qsyn> qcba 

qsyn> qcga z 0

qsyn> qcga z 1

qsyn> qccp -l
Listed by gate ID
ID:   0 (  z)      Time:    1     Qubit:   0 
ID:   1 (  z)      Time:    1     Qubit:   1 

qsyn> qc2zx

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (4, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 3)	  #Neighbors:   1     (4, -) 
ID:   2 (●, 0)           (Qubit, Col): (1, 0)	  #Neighbors:   1     (5, -) 
ID:   3 (●, 0)           (Qubit, Col): (1, 3)	  #Neighbors:   1     (5, -) 
ID:   4 (Z, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (1, -) 
ID:   5 (Z, π)           (Qubit, Col): (1, 2)	  #Neighbors:   2     (2, -) (3, -) 
Total #Vertices: 6


qsyn> zxge -addv 0 HBOX 0

qsyn> zxge -addv 1 HBOX 0

qsyn> zxge -adde 4 6 HADAMARD

qsyn> zxge -adde 6 7 SIMPLE

qsyn> zxge -adde 7 5 HADAMARD

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (4, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 3)	  #Neighbors:   1     (4, -) 
ID:   2 (●, 0)           (Qubit, Col): (1, 0)	  #Neighbors:   1     (5, -) 
ID:   3 (●, 0)           (Qubit, Col): (1, 3)	  #Neighbors:   1     (5, -) 
ID:   4 (Z, π)           (Qubit, Col): (0, 2)	  #Neighbors:   3     (0, -) (1, -) (6, H) 
ID:   5 (Z, π)           (Qubit, Col): (1, 2)	  #Neighbors:   3     (2, -) (3, -) (7, H) 
ID:   6 (H, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   2     (4, H) (7, -) 
ID:   7 (H, 0)           (Qubit, Col): (1, 0)	  #Neighbors:   2     (5, H) (6, -) 
Total #Vertices: 8


qsyn> zxgsimp -hf
Hadamard Rule                 

Iteration 1:
>>>
<<<

Iteration 2:
>>>
<<<
=> 2 iterations.
  1) 1 matches
  2) 1 matches

Hadmard Fusion Rule           
=> 0 iterations.


qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (4, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 3)	  #Neighbors:   1     (4, -) 
ID:   2 (●, 0)           (Qubit, Col): (1, 0)	  #Neighbors:   1     (5, -) 
ID:   3 (●, 0)           (Qubit, Col): (1, 3)	  #Neighbors:   1     (5, -) 
ID:   4 (Z, π)           (Qubit, Col): (0, 2)	  #Neighbors:   3     (0, -) (1, -) (5, -) 
ID:   5 (Z, π)           (Qubit, Col): (1, 2)	  #Neighbors:   3     (2, -) (3, -) (4, -) 
Total #Vertices: 6


qsyn> zxr

qsyn> qcr

qsyn> ver 9
Note: verbose level is set to 9

qsyn> qcba
Note: QCir list is empty now. Create a new one.

qsyn> qcga h 0

qsyn> qcga h 0

qsyn> qcga z 0

qsyn> qcga h 0

qsyn> qcga h 0

qsyn> qcga z 0

qsyn> qccp -l
Listed by gate ID
ID:   0 (  h)      Time:    1     Qubit:   0 
ID:   1 (  h)      Time:    2     Qubit:   0 
ID:   2 (  z)      Time:    3     Qubit:   0 
ID:   3 (  h)      Time:    4     Qubit:   0 
ID:   4 (  h)      Time:    5     Qubit:   0 
ID:   5 (  z)      Time:    6     Qubit:   0 

qsyn> qc2zx

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 8)	  #Neighbors:   1     (7, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (3, -) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (2, -) (4, -) 
ID:   4 (Z, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (3, -) (5, -) 
ID:   5 (H, π)           (Qubit, Col): (0, 5)	  #Neighbors:   2     (4, -) (6, -) 
ID:   6 (H, π)           (Qubit, Col): (0, 6)	  #Neighbors:   2     (5, -) (7, -) 
ID:   7 (Z, π)           (Qubit, Col): (0, 7)	  #Neighbors:   2     (1, -) (6, -) 
Total #Vertices: 8


qsyn> zxge -rme 2 3 SIMPLE

qsyn> zxge -adde 2 3 HADAMARD

qsyn> zxge -rme 4 5 SIMPLE

qsyn> zxge -adde 4 5 HADAMARD

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (2, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 8)	  #Neighbors:   1     (7, -) 
ID:   2 (H, π)           (Qubit, Col): (0, 2)	  #Neighbors:   2     (0, -) (3, H) 
ID:   3 (H, π)           (Qubit, Col): (0, 3)	  #Neighbors:   2     (2, H) (4, -) 
ID:   4 (Z, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (3, -) (5, H) 
ID:   5 (H, π)           (Qubit, Col): (0, 5)	  #Neighbors:   2     (4, H) (6, -) 
ID:   6 (H, π)           (Qubit, Col): (0, 6)	  #Neighbors:   2     (5, -) (7, -) 
ID:   7 (Z, π)           (Qubit, Col): (0, 7)	  #Neighbors:   2     (1, -) (6, -) 
Total #Vertices: 8


qsyn> zxgsimp -hf
Hadamard Rule                 

Iteration 1:
>>>
<<<

Iteration 2:
>>>
<<<

Iteration 3:
>>>
<<<
=> 3 iterations.
  1) 2 matches
  2) 1 matches
  3) 1 matches

Hadmard Fusion Rule           
=> 0 iterations.


qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (4, H) 
ID:   1 (●, 0)           (Qubit, Col): (0, 8)	  #Neighbors:   1     (7, -) 
ID:   4 (Z, π)           (Qubit, Col): (0, 4)	  #Neighbors:   2     (0, H) (7, H) 
ID:   7 (Z, π)           (Qubit, Col): (0, 7)	  #Neighbors:   2     (1, -) (4, H) 
Total #Vertices: 4


qsyn> qq -f

