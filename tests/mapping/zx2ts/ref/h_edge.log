DV Lab, NTUEE, Qsyn 0.4.2
qsyn> zxn
Create and checkout to Graph 0

qsyn> zxgedit -addi 0

qsyn> zxgedit -addo 0

qsyn> zxgedit -addv 0 Z

qsyn> // out-edge are H-edge
qsyn> zxgedit -adde 0 2 SIMPLE

qsyn> zxgedit -adde 2 1 HADAMARD

qsyn> ver 8
Note: verbose level is set to 8

qsyn> zx2ts
Traverse and build the tensor... 
Topological order from first input: 0 2 1 
Size of topological order: 3
> Mapping vertex 0 (●): New Subgraph
  - Current frontiers: 
    0--2 (-) axis id: 1
> Mapping vertex 2 ([1m[32mZ[0m[0m): Tensordot
  - Current frontiers: 
    1--2 ([1m[34mH[0m[0m) axis id: 1
> Mapping vertex 1 (●): Boundary Node
  - Current frontiers: 
    1--2 ([1m[34mH[0m[0m) axis id: 1
Successfully added Tensor 0
Input  axis ids: 0
Output axis ids: 1
Stored the resulting tensor as tensor id 0

qsyn> ver 3
Note: verbose level is set to 3

qsyn> // both edges are S-edge
qsyn> zxgedit -rme 2 1 -ALL

qsyn> zxgedit -adde 2 1 SIMPLE

qsyn> ver 8
Note: verbose level is set to 8

qsyn> zx2ts
Traverse and build the tensor... 
Topological order from first input: 0 2 1 
Size of topological order: 3
> Mapping vertex 0 (●): New Subgraph
  - Current frontiers: 
    0--2 (-) axis id: 1
> Mapping vertex 2 ([1m[32mZ[0m[0m): Tensordot
  - Current frontiers: 
    1--2 (-) axis id: 1
> Mapping vertex 1 (●): Boundary Node
  - Current frontiers: 
    1--2 (-) axis id: 1
Successfully added Tensor 1
Input  axis ids: 0
Output axis ids: 1
Stored the resulting tensor as tensor id 1

qsyn> ver 3
Note: verbose level is set to 3

qsyn> // in-edge are H-edge
qsyn> zxgedit -rme 0 2 -ALL

qsyn> zxgedit -adde 2 0 HADAMARD

qsyn> ver 8
Note: verbose level is set to 8

qsyn> zx2ts
Traverse and build the tensor... 
Topological order from first input: 0 2 1 
Size of topological order: 3
> Mapping vertex 0 (●): New Subgraph
  - Current frontiers: 
    0--2 ([1m[34mH[0m[0m) axis id: 1
> Mapping vertex 2 ([1m[32mZ[0m[0m): Tensordot
  - Current frontiers: 
    1--2 (-) axis id: 1
> Mapping vertex 1 (●): Boundary Node
  - Current frontiers: 
    1--2 (-) axis id: 1
Successfully added Tensor 2
Input  axis ids: 0
Output axis ids: 1
Stored the resulting tensor as tensor id 2

qsyn> ver 3
Note: verbose level is set to 3

qsyn> // Both edges are H-edge
qsyn> zxgedit -rme 1 2 -ALL

qsyn> zxgedit -adde 2 1 HADAMARD

qsyn> ver 8
Note: verbose level is set to 8

qsyn> zx2ts
Traverse and build the tensor... 
Topological order from first input: 0 2 1 
Size of topological order: 3
> Mapping vertex 0 (●): New Subgraph
  - Current frontiers: 
    0--2 ([1m[34mH[0m[0m) axis id: 1
> Mapping vertex 2 ([1m[32mZ[0m[0m): Tensordot
  - Current frontiers: 
    1--2 ([1m[34mH[0m[0m) axis id: 1
> Mapping vertex 1 (●): Boundary Node
  - Current frontiers: 
    1--2 ([1m[34mH[0m[0m) axis id: 1
Successfully added Tensor 3
Input  axis ids: 0
Output axis ids: 1
Stored the resulting tensor as tensor id 3

qsyn> zxn
Create and checkout to Graph 1

qsyn> zxge -addi 0
Add vertex (●) 0

qsyn> zxge -addo 0
Add vertex (●) 1

qsyn> zxge -addi 1
Add vertex (●) 2

qsyn> zxge -addo 1
Add vertex (●) 3

qsyn> zxge -addv 0 Z
Add vertex ([1m[32mZ[0m[0m) 4

qsyn> zxge -addv 0 Z
Add vertex ([1m[32mZ[0m[0m) 5

qsyn> zxge -addv 0 Z
Add vertex ([1m[32mZ[0m[0m) 6

qsyn> zxge -addv 0 Z
Add vertex ([1m[32mZ[0m[0m) 7

qsyn> zxge -adde 0 4 SIMPLE
Add edge (0, 4)

qsyn> zxge -adde 1 4 SIMPLE
Add edge (1, 4)

qsyn> zxge -adde 2 5 HADAMARD
Add edge (2, 5)

qsyn> zxge -adde 3 5 HADAMARD
Add edge (3, 5)

qsyn> zxge -adde 6 5 HADAMARD
Add edge (5, 6)

qsyn> zxge -adde 6 4 HADAMARD
Add edge (4, 6)

qsyn> zxge -adde 6 7 HADAMARD
Add edge (6, 7)

qsyn> ver 8
Note: verbose level is set to 8

qsyn> zx2ts
Traverse and build the tensor... 
Topological order from first input: 0 4 1 6 5 2 3 7 
Size of topological order: 8
> Mapping vertex 0 (●): New Subgraph
  - Current frontiers: 
    0--4 (-) axis id: 1
> Mapping vertex 4 ([1m[32mZ[0m[0m): Tensordot
  - Current frontiers: 
    1--4 (-) axis id: 1
    4--6 ([1m[34mH[0m[0m) axis id: 2
> Mapping vertex 1 (●): Boundary Node
  - Current frontiers: 
    1--4 (-) axis id: 1
    4--6 ([1m[34mH[0m[0m) axis id: 2
> Mapping vertex 6 ([1m[32mZ[0m[0m): Tensordot
  - Current frontiers: 
    1--4 (-) axis id: 1
    5--6 ([1m[34mH[0m[0m) axis id: 2
    6--7 ([1m[34mH[0m[0m) axis id: 3
> Mapping vertex 5 ([1m[32mZ[0m[0m): Tensordot
  - Current frontiers: 
    1--4 (-) axis id: 1
    6--7 ([1m[34mH[0m[0m) axis id: 2
    2--5 ([1m[34mH[0m[0m) axis id: 3
    3--5 ([1m[34mH[0m[0m) axis id: 4
> Mapping vertex 2 (●): Boundary Node
  - Current frontiers: 
    1--4 (-) axis id: 1
    6--7 ([1m[34mH[0m[0m) axis id: 2
    2--5 ([1m[34mH[0m[0m) axis id: 4
    3--5 ([1m[34mH[0m[0m) axis id: 3
> Mapping vertex 3 (●): Boundary Node
  - Current frontiers: 
    1--4 (-) axis id: 1
    6--7 ([1m[34mH[0m[0m) axis id: 2
    2--5 ([1m[34mH[0m[0m) axis id: 3
    3--5 ([1m[34mH[0m[0m) axis id: 4
> Mapping vertex 7 ([1m[32mZ[0m[0m): Tensordot
  - Current frontiers: 
    1--4 (-) axis id: 1
    2--5 ([1m[34mH[0m[0m) axis id: 2
    3--5 ([1m[34mH[0m[0m) axis id: 3
Successfully added Tensor 4
Input  axis ids: 0 2
Output axis ids: 1 3
Stored the resulting tensor as tensor id 4

qsyn> qcnew
Create and checkout to QCir 0

qsyn> qcba 1

qsyn> qcga -h 0

qsyn> qc2ts
Traverse and build the tensor... 
> Add boundary
Successfully added Tensor 5
  - Add Qubit 0 output port: 1
> Gate 0 (h)
> Pin Permutation
  - Qubit: 0 input : 0 -> 0 |  output: 1 -> 1
Stored the resulting tensor as tensor id 5

qsyn> tseq 0 5
[1m[32mEquivalent[0m[0m
- Global Norm : 1
- Global Phase: 0

qsyn> qq -f 

