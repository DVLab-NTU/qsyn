DV Lab, NTUEE, Qsyn 0.5.1
qsyn> // testing empty dofiles
qsyn> 
qsyn> dofile tests/cli/helper/empty_dof
[Error] file "tests/cli/helper/empty_dof" is empty!!

qsyn> 
qsyn> // Testing dofile arguments
qsyn> 
qsyn> dofile tests/cli/helper/param_dof

qsyn> // placeholder
qsyn> help $1 // should print all help messages
alias          : alias a command to another name
clear          : clear the terminal
dofile         : execute the commands in the dofile
dtcheckout     : checkout to Device <id> in DeviceMgr
dtdelete       : remove a Device from DeviceMgr
dtgprint       : print info of device topology
dtgread        : read a device topology
dtprint        : print info about Devices
dtreset        : reset DeviceMgr
duoprint       : print Duostra parameters
duoset         : set Duostra parameter(s)
duostra        : map logical circuit to physical circuit
extprint       : print info of extracting ZXGraph
extract        : perform step(s) in extraction
extset         : set extractor parameters
help           : shows helping message to commands
history        : print command history
logger         : display and set the logger's status
mpequiv        : check equivalence of the physical and the logical circuits
qc2ts          : convert QCir to tensor
qc2zx          : convert QCir to ZXGraph
qcbadd         : add qubit(s)
qcbdelete      : delete qubit
qccdraw        : draw a QCir. This command relies on qiskit and pdflatex to be present in the system
qccheckout     : checkout to QCir <id> in QCirMgr
qccompose      : compose a QCir
qccoptimize    : optimize QCir
qccopy         : copy a QCir to QCirMgr
qccprint       : print info of QCir
qccread        : read a circuit and construct the corresponding netlist
qccwrite       : write QCir to a QASM file
qcdelete       : remove a QCir from QCirMgr
qcgadd         : add quantum gate
qcgdelete      : delete gate
qcgprint       : print gate info in QCir
qcnew          : create a new QCir to QCirMgr
qcprint        : print info about QCirs or settings
qcreset        : reset QCirMgr
qcset          : set QCir parameters
qctensor       : tensor a QCir
qquit          : quit Qsyn
seed           : set the random seed
tsadjoint      : adjoint the specified tensor
tsequiv        : check the equivalency of two stored tensors
tsprint        : print info about Tensors
tsreset        : reset the tensor manager
tstprint       : print info of Tensor
usage          : report the runtime and/or memory usage
verbose        : set verbose level to 0-9 (default: 3)
zx2qc          : extract QCir from ZXGraph
zx2ts          : convert ZXGraph to tensor
zxcheckout     : checkout to Graph <id> in ZXGraphMgr
zxcompose      : compose a ZXGraph
zxcopy         : copy a ZXGraph to ZXGraphMgr
zxdelete       : remove a ZXGraph from ZXGraphMgr
zxgadjoint     : adjoint ZXGraph
zxgassign      : assign quantum states to input/output vertex
zxgdraw        : draw ZXGraph
zxgedit        : edit ZXGraph
zxggflow       : calculate and print the generalized flow of a ZXGraph
zxgprint       : print info of ZXGraph
zxgread        : read a file and construct the corresponding ZXGraph
zxgsimp        : perform simplification strategies for ZXGraph
zxgtest        : test ZXGraph structures and functions
zxgtraverse    : traverse ZXGraph and update topological order of vertices
zxgwrite       : write the ZXGraph to a file
zxnew          : create a new ZXGraph to ZXGraphMgr
zxprint        : print info about ZXGraphs
zxreset        : reset ZXGraphMgr
zxtensor       : tensor a ZXGraph


qsyn> dofile tests/cli/helper/param_dof dofile

qsyn> // placeholder
qsyn> help $1 // should print help message of dofile command
Usage: dofile [-h] <string file> [<string arguments>]...

Description:
  execute the commands in the dofile

Positional Arguments:
  string  file         path to a dofile, i.e., a list of Qsyn commands 
  string  arguments    arguments to the dofile                         

Options:
  flag  -h, --help    show this help message and exit 

qsyn> 
qsyn> dofile tests/cli/helper/param_dof_kw // should error and print usage
[Error] wrong number of arguments provided, expected 2 but got 0!!
[Error] Usage: ... tests/cli/helper/param_dof_kw <input1> <input2>

qsyn> dofile tests/cli/helper/param_dof_kw haha1 haha2 haha3 // should error and print usage
[Error] wrong number of arguments provided, expected 2 but got 3!!
[Error] Usage: ... tests/cli/helper/param_dof_kw <input1> <input2>

qsyn> 
qsyn> dofile tests/cli/helper/param_dof_kw qquit dofile

qsyn> //!ARGS input1 input2
qsyn> help ${input1} // print help message of qquit
Usage: qquit [-h] [-force]

Description:
  quit Qsyn

Options:
  flag  -h, --help    show this help message and exit 
  flag  -force        quit without reaffirming        

qsyn> help $input2   // print help message of dofile
Usage: dofile [-h] <string file> [<string arguments>]...

Description:
  execute the commands in the dofile

Positional Arguments:
  string  file         path to a dofile, i.e., a list of Qsyn commands 
  string  arguments    arguments to the dofile                         

Options:
  flag  -h, --help    show this help message and exit 

qsyn> help $1        // print help message of qquit
Usage: qquit [-h] [-force]

Description:
  quit Qsyn

Options:
  flag  -h, --help    show this help message and exit 
  flag  -force        quit without reaffirming        

qsyn> help ${2}      // print help message of dofile
Usage: dofile [-h] <string file> [<string arguments>]...

Description:
  execute the commands in the dofile

Positional Arguments:
  string  file         path to a dofile, i.e., a list of Qsyn commands 
  string  arguments    arguments to the dofile                         

Options:
  flag  -h, --help    show this help message and exit 

qsyn> 
qsyn> qq -f

