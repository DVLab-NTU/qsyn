qsyn> zxm -on
ZXMODE turn ON!

qsyn> zxn
Successfully generated Graph 0
Checkout to Graph 0

qsyn> zxgedit -addi 0 0

qsyn> zxgedit -addo 1 0

qsyn> zxgedit -addv 2 0 Z

qsyn> zxgedit -adde 0 2 SIMPLE

qsyn> zxgedit -adde 2 1 HADAMARD

qsyn> ver 7
Note: verbose level is set to 7

qsyn> zxgtsm
---- TRAVERSE AND BUILD THE TENSOR ----
Topological order from first input: 0 2 1 
Size of topological order: 3
> Mapping vertex 0 (●): New Subgraph
> Mapping vertex 2 ([1m[32mZ[0m[0m): Tensordot
> Mapping vertex 1 (●): Boundary Node
Successfully added Tensor 0
Stored the resulting tensor as tensor id 0

qsyn> ver 3
Note: verbose level is set to 3

qsyn> zxgedit -rme 2 1

qsyn> zxgedit -adde 2 1 SIMPLE

qsyn> ver 7
Note: verbose level is set to 7

qsyn> zxgtsm
---- TRAVERSE AND BUILD THE TENSOR ----
Topological order from first input: 0 2 1 
Size of topological order: 3
> Mapping vertex 0 (●): New Subgraph
> Mapping vertex 2 ([1m[32mZ[0m[0m): Tensordot
> Mapping vertex 1 (●): Boundary Node
Successfully added Tensor 1
Stored the resulting tensor as tensor id 1

qsyn> ver 3
Note: verbose level is set to 3

qsyn> zxgedit -rme 0 2

qsyn> zxgedit -adde 2 0 HADAMARD

qsyn> ver 7
Note: verbose level is set to 7

qsyn> zxgtsm
---- TRAVERSE AND BUILD THE TENSOR ----
Topological order from first input: 0 2 1 
Size of topological order: 3
> Mapping vertex 0 (●): New Subgraph
> Mapping vertex 2 ([1m[32mZ[0m[0m): Tensordot
> Mapping vertex 1 (●): Boundary Node
Successfully added Tensor 2
Stored the resulting tensor as tensor id 2

qsyn> ver 3
Note: verbose level is set to 3

qsyn> zxgedit -rme 1 2

qsyn> zxgedit -adde 2 1 HADAMARD

qsyn> ver 7
Note: verbose level is set to 7

qsyn> zxgtsm
---- TRAVERSE AND BUILD THE TENSOR ----
Topological order from first input: 0 2 1 
Size of topological order: 3
> Mapping vertex 0 (●): New Subgraph
> Mapping vertex 2 ([1m[32mZ[0m[0m): Tensordot
> Mapping vertex 1 (●): Boundary Node
Successfully added Tensor 3
Stored the resulting tensor as tensor id 3

qsyn> q -f

