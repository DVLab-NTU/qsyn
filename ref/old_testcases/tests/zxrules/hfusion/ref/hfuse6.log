DV Lab, NTUEE, Qsyn 0.3.0
qsyn> ver 9
Note: verbose level is set to 9

qsyn> qcba
Note: QCir list is empty now. Create a new one.
Create and checkout to QCir 0

qsyn> qcba 

qsyn> qcga -z 0

qsyn> qcga -z 1

qsyn> qccp -l
Listed by gate ID
ID:   0 (  z)      Time:    0     Qubit:   0 
ID:   1 (  z)      Time:    0     Qubit:   1 

qsyn> qc2zx
Create and checkout to Graph 0
Traverse and build the graph... 

> Add boundaries
Add vertex (●) 0
Add vertex (●) 1
Add edge (0, 1)
Add vertex (●) 2
Add vertex (●) 3
Add edge (2, 3)

> Gate 1 (z)
Add vertex (●) 0
Add vertex ([1m[32mZ[0m[0m) 1
Add vertex (●) 2
Add edge (0, 1)
Add edge (1, 2)
Remove edge (0, 4), type: -
Add edge (2, 4)
Remove edge (2, 4), type: -
Add edge (4, 3)

> Gate 0 (z)
Add vertex (●) 0
Add vertex ([1m[32mZ[0m[0m) 1
Add vertex (●) 2
Add edge (0, 1)
Add edge (1, 2)
Remove edge (0, 5), type: -
Add edge (0, 5)
Remove edge (2, 5), type: -
Add edge (5, 1)

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (5, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 2)	  #Neighbors:   1     (5, -) 
ID:   2 (●, 0)           (Qubit, Col): (1, 0)	  #Neighbors:   1     (4, -) 
ID:   3 (●, 0)           (Qubit, Col): (1, 2)	  #Neighbors:   1     (4, -) 
ID:   4 ([1m[32mZ[0m[0m, π)           (Qubit, Col): (1, 1)	  #Neighbors:   2     (2, -) (3, -) 
ID:   5 ([1m[32mZ[0m[0m, π)           (Qubit, Col): (0, 1)	  #Neighbors:   2     (0, -) (1, -) 
Total #Vertices: 6


qsyn> zxge -addv 0 H_BOX 0
Add vertex ([1m[33mH[0m[0m) 6

qsyn> zxge -addv 1 H_BOX 0
Add vertex ([1m[33mH[0m[0m) 7

qsyn> zxge -adde 4 6 HADAMARD
Add edge (4, 6)

qsyn> zxge -adde 6 7 SIMPLE
Add edge (6, 7)

qsyn> zxge -adde 7 5 HADAMARD
Add edge (7, 5)

qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (5, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 2)	  #Neighbors:   1     (5, -) 
ID:   2 (●, 0)           (Qubit, Col): (1, 0)	  #Neighbors:   1     (4, -) 
ID:   3 (●, 0)           (Qubit, Col): (1, 2)	  #Neighbors:   1     (4, -) 
ID:   4 ([1m[32mZ[0m[0m, π)           (Qubit, Col): (1, 1)	  #Neighbors:   3     (2, -) (3, -) (6, [1m[34mH[0m[0m) 
ID:   5 ([1m[32mZ[0m[0m, π)           (Qubit, Col): (0, 1)	  #Neighbors:   3     (0, -) (1, -) (7, [1m[34mH[0m[0m) 
ID:   6 ([1m[33mH[0m[0m, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   2     (4, [1m[34mH[0m[0m) (7, -) 
ID:   7 ([1m[33mH[0m[0m, 0)           (Qubit, Col): (1, 0)	  #Neighbors:   2     (5, [1m[34mH[0m[0m) (6, -) 
Total #Vertices: 8


qsyn> zxgsimp -hf
Hadamard Rule                 

Iteration 1:
>>>
Add edge (4, 7)
Remove ID: 6
<<<

Iteration 2:
>>>
Add edge (4, 5)
Remove ID: 7
<<<
=> 2 iterations.
  1) 1 matches
  2) 1 matches

Hadamard Cancellation Rule    
=> 0 iterations.


qsyn> zxgp -v

ID:   0 (●, 0)           (Qubit, Col): (0, 0)	  #Neighbors:   1     (5, -) 
ID:   1 (●, 0)           (Qubit, Col): (0, 2)	  #Neighbors:   1     (5, -) 
ID:   2 (●, 0)           (Qubit, Col): (1, 0)	  #Neighbors:   1     (4, -) 
ID:   3 (●, 0)           (Qubit, Col): (1, 2)	  #Neighbors:   1     (4, -) 
ID:   4 ([1m[32mZ[0m[0m, π)           (Qubit, Col): (1, 1)	  #Neighbors:   3     (2, -) (3, -) (5, -) 
ID:   5 ([1m[32mZ[0m[0m, π)           (Qubit, Col): (0, 1)	  #Neighbors:   3     (0, -) (1, -) (4, -) 
Total #Vertices: 6


qsyn> qq -f

