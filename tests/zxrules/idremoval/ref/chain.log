qsyn> zxm -on
ZXMODE turn ON!

qsyn> zxn
Successfully generate Graph 0
Checkout to Graph 0

qsyn> zxgedit -addi 0 0
Add input 0

qsyn> zxgedit -addo 1 0
Add output 1

qsyn> zxgedit -addv 2 0 Z 0
Add vertex 2

qsyn> zxgedit -addv 3 0 Z 0
Add vertex 3

qsyn> zxgedit -addv 4 0 X 0
Add vertex 4

qsyn> zxgedit -adde 0 2 SIMPLE
Add edge ( 0, 2 )

qsyn> zxgedit -adde 1 2 SIMPLE
Add edge ( 1, 2 )

qsyn> zxgedit -adde 3 2 SIMPLE
Add edge ( 3, 2 )

qsyn> zxgedit -adde 2 3 SIMPLE
Add edge ( 2, 3 )

qsyn> zxgedit -adde 4 2 HADAMARD
Add edge ( 4, 2 )

qsyn> zxgedit -adde 2 4 SIMPLE
Add edge ( 2, 4 )

qsyn> zxgp -v
ID:	0	VertexType:	●	Qubit:	0	Phase:	0	#Neighbors:	1	(2, -) 
ID:	1	VertexType:	●	Qubit:	0	Phase:	0	#Neighbors:	1	(2, -) 
ID:	2	VertexType:	[1m[32mZ[0m[0m	Qubit:	0	Phase:	0	#Neighbors:	6	(0, -) (1, -) (3, -) (3, -) (4, -) (4, [1m[34mH[0m[0m) 
ID:	3	VertexType:	[1m[32mZ[0m[0m	Qubit:	0	Phase:	0	#Neighbors:	2	(2, -) (2, -) 
ID:	4	VertexType:	[1m[31mX[0m[0m	Qubit:	0	Phase:	0	#Neighbors:	2	(2, -) (2, [1m[34mH[0m[0m) 
Total #Vertices: 5

qsyn> zxgp -e
( 0, 2 )	Type:	-
( 1, 2 )	Type:	-
( 3, 2 )	Type:	-
( 2, 3 )	Type:	-
( 4, 2 )	Type:	[1m[34mH[0m[0m
( 2, 4 )	Type:	-
Total #Edges: 6

qsyn> zxgsimp -idr
Find match of identity removal rule: 2
Identity Removal Rule: 2 Add edge ( 2, 2 )
Add edge ( 2, 2 )
Remove ID: 3
Remove ID: 4
. Find match of identity removal rule: 0
1 iterations

qsyn> zxgp -v
ID:	0	VertexType:	●	Qubit:	0	Phase:	0	#Neighbors:	1	(2, -) 
ID:	1	VertexType:	●	Qubit:	0	Phase:	0	#Neighbors:	1	(2, -) 
ID:	2	VertexType:	[1m[32mZ[0m[0m	Qubit:	0	Phase:	0	#Neighbors:	6	(0, -) (1, -) (2, [1m[34mH[0m[0m) (2, [1m[34mH[0m[0m) (2, -) (2, -) 
Total #Vertices: 3

qsyn> zxgp -e
( 0, 2 )	Type:	-
( 1, 2 )	Type:	-
( 2, 2 )	Type:	-
( 2, 2 )	Type:	[1m[34mH[0m[0m
Total #Edges: 4

qsyn> q -f

